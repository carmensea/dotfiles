eval "$(/opt/homebrew/bin/brew shellenv)"

export PATH=/usr/local/share/npm/bin:$PATH
export PATH=$HOME/.node/bin:$PATH

# HOMEBREW / GVM / REVEL
export PATH=/usr/local/bin:$PATH:/usr/local/sbin:/opt
export PATH=$HOME/bin:$PATH
export PATH="/usr/local/opt/postgresql@9.6/bin:$PATH"
# Path changes are made non-destructive with PATH=new_path:$PATH   This is like A=A+B so we preserve the old path

# Path order matters, putting /usr/local/bin before /usr/bin
# ensures brew programs will be seen and used before another program
# of the same name is called

# A more colorful prompt.
# \[\e[0m\] resets the color to default color
ColorReset='\[\e[0m\]'
#  \e[0;31m\ sets the color to red
ColorRed='\[\e[0;31m\]'
# \e[0;32m\ sets the color to green
ColorGreen='\[\e[0;32m\]'

# PS1 is the variable for the prompt you see everytime you hit enter.
git_prompt_script=/usr/local/etc/bash_completion.d/git-prompt.sh
if [ -s $git_prompt_script ]; then
  # if git-prompt is installed, use it (ie. to install it use:
  # `brew install git`)
  source $git_prompt_script
  #export GIT_PS1_SHOWDIRTYSTATE=1
  # set the prompt to display current working directory in red along with git branch
  #export PS1="\n$ColorRed\W$ColorReset\$(__git_ps1) :> "

  # Another possibile prompt, with a color coded git-branch
   export GIT_PS1_SHOWCOLORHINTS=1
   export PROMPT_COMMAND='__git_ps1 "\n$ColorRed\W$ColorReset" " :> "'

else
  # otherwise omit git from the prompt
  export PS1="\n$ColorRed\W$ColorReset :> "
fi

# Colors ls should use for folders, files, symlinks etc, see `man ls` and
# search for LSCOLORS
export LSCOLORS=ExGxFxdxCxDxDxaccxaeex
# Force ls to use colors (G) and use humanized file sizes (h)
alias ls='ls -Gh'

# Force grep to always use the color option and show line numbers
export GREP_OPTIONS='--color=always'

# Useful aliases
alias be="bundle exec"
