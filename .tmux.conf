set-option -g default-shell /bin/zsh

set-option -g default-command "reattach-to-user-namespace -l bash"
set -g default-shell /bin/zsh
#set -g default-command /bin/zsh
set -g default-terminal 'screen-256color'
set -g terminal-overrides 'xterm-*:smcup@:rmcup@'

set-option -g history-limit 30000
#use | and - for spliting windows
unbind %
bind | split-window -h
bind - split-window -v

set-option -g prefix C-f
bind-key C-f last-window

# Widen panes
bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -L 10
bind h resize-pane -R 10

# Start numbering at 1
set -g base-index 1

# disable sound bell
set -g bell-action none
# disable visual bell
set -g visual-bell off

# Allows for faster key repetition
set -s escape-time 0

# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# another TMUX session
bind-key f send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
#set-window-option -g window-status-current-bg red

#Enable Mouse
setw -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
#set -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on
#set -g mouse-utf8 on

#make spliting occur in the same path
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

#vim style pane selection
unbind-key j

unbind-key k
bind-key k select-pane -U

unbind-key h
bind-key h select-pane -L

unbind-key l
bind-key l select-pane -R

#layout bindings
bind-key ! source-file ~/.tmux/general
bind-key @ source-file ~/.tmux/general

#new window binding
bind-key C-n new-window


#Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
